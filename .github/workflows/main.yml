name: Master
run-name: The master and release workflow
on: [push]
jobs:
  setup:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: todos
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup environment
        uses: ./.github/actions/setup-environment
      - run: yarn test
      
  express:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Restore environment
        uses: ./.github/actions/restore-environment

  express-release:
      name: Build images and push to DockerHub
      uses: ./.github/workflows/docker-build-and-publish.yml
      needs: express
      with:
        dockerfile-path: 'Dockerfile.express'
        image-name: 'workspace-starter/express'
        image-tag: 'latest'
  
      # fastify:
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   services:
  #     postgres:
  #       image: postgres:alpine
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: password
  #         POSTGRES_DB: todos
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #     - name: Setup environment
  #       uses: ./.github/actions/setup-environment
  #     - run: docker build . -f Dockerfile.express
      
  # uws:
  #   runs-on: ubuntu-latest
  #   needs: setup
  #   services:
  #     postgres:
  #       image: postgres:alpine
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: password
  #         POSTGRES_DB: todos
  #       ports:
  #         - 5432:5432
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v4
  #     - name: Setup environment
  #       uses: ./.github/actions/setup-environment
  #     - run: docker build . -f Dockerfile.uws
          